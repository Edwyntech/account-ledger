networks:
  kafka:
    name: kafka
    driver: bridge

services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: unless-stopped
    networks:
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_ADMIN_ENABLE_SERVER: false

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    networks:
      - kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_COMPRESSION_TYPE: gzip
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: '9091'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'

  initialize-topics:
    image: confluentinc/cp-kafka
    container_name: initialize-topics
    networks:
      - kafka
    depends_on:
      - kafka
    command:
      - bash
      - -c
      - |
        kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic topic-account-created --partitions 2 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic topic-movement-applied --partitions 2 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic topic-balance-updated --partitions 2 --replication-factor 1

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    restart: unless-stopped
    depends_on:
      - kafka
    networks:
      - kafka
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9093'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    restart: unless-stopped
    depends_on:
      - kafka
      - schema-registry
    networks:
      - kafka
    ports:
      - "8090:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9093"
              schema-registry:
                url: "http://schema-registry:8085"
